2025-08-03 11:23:21.341 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 11:23:21.387 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.389 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 48.7722ms
2025-08-03 11:23:21.390 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 11:23:21.392 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.400 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:21.410 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.410 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.460 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:21.461 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:21.464 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 11:23:21.499 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 11:23:21.512 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 11:23:21.515 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 50.4491ms
2025-08-03 11:23:21.515 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:21.515 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 124.5289ms
2025-08-03 11:23:21.519 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 11:23:21.519 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.519 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.3709ms
2025-08-03 11:23:21.520 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 11:23:21.520 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.521 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:21.521 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.521 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.523 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:21.525 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 11:23:21.527 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 11:23:21.527 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 7.2072ms
2025-08-03 11:23:21.571 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 11:23:21.571 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.572 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:21.572 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.572 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.575 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:21.575 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 11:23:21.575 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 11:23:21.576 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.5741ms
2025-08-03 11:23:21.601 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/students/stats - null null
2025-08-03 11:23:21.601 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.601 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/students/stats - 204 null null 0.3951ms
2025-08-03 11:23:21.602 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/students/stats - application/json null
2025-08-03 11:23:21.603 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.603 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:21.604 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.604 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.606 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:21.607 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 11:23:21.608 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 11:23:21.608 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/students/stats - 401 0 null 5.718ms
2025-08-03 11:23:21.644 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/students/courses - null null
2025-08-03 11:23:21.645 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.645 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/students/courses - 204 null null 0.496ms
2025-08-03 11:23:21.646 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/students/courses - application/json null
2025-08-03 11:23:21.646 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.647 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:21.648 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.648 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.651 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:21.651 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 11:23:21.652 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 11:23:21.652 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/students/courses - 401 0 null 5.6583ms
2025-08-03 11:23:21.694 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/subscriptions/current - null null
2025-08-03 11:23:21.696 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.697 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/subscriptions/current - 204 null null 2.4823ms
2025-08-03 11:23:21.702 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/subscriptions/current - application/json null
2025-08-03 11:23:21.702 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:21.703 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:21.704 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.704 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:21 AM'.
2025-08-03 11:23:21.708 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:21.709 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/subscriptions/current - 404 0 null 7.425ms
2025-08-03 11:23:21.711 +08:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5294/api/subscriptions/current, Response status code: 404
2025-08-03 11:23:26.341 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/auth/logout - null null
2025-08-03 11:23:26.341 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:26.341 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/auth/logout - 204 null null 0.5463ms
2025-08-03 11:23:26.342 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:5294/api/auth/logout - application/json 0
2025-08-03 11:23:26.342 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:26.343 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:26 AM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 11:23:26.344 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:26 AM'.
2025-08-03 11:23:26.344 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/2/2025 8:44:08 AM', Current time (UTC): '8/3/2025 3:23:26 AM'.
2025-08-03 11:23:26.346 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:26.346 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 11:23:26.347 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 11:23:26.347 +08:00 [INF] Request finished HTTP/1.1 POST http://localhost:5294/api/auth/logout - 401 0 null 4.7839ms
2025-08-03 11:23:26.436 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 11:23:26.436 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:26.436 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.4974ms
2025-08-03 11:23:26.438 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 11:23:26.439 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:26.439 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:26.439 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 11:23:26.445 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 11:23:26.448 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 11:23:26.448 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 8.9481ms
2025-08-03 11:23:26.449 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:26.449 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 10.6811ms
2025-08-03 11:23:26.508 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 11:23:26.509 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:26.509 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 11:23:26.509 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 11:23:26.509 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 0.769ms
2025-08-03 11:23:28.538 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/auth/login - null null
2025-08-03 11:23:28.539 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.539 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/auth/login - 204 null null 0.8886ms
2025-08-03 11:23:28.541 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:5294/api/auth/login - application/json 61
2025-08-03 11:23:28.541 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.541 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.AuthController.Login (CeceLearningPortal.Api)'
2025-08-03 11:23:28.542 +08:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CeceLearningPortal.Api.DTOs.LoginDto) on controller CeceLearningPortal.Api.Controllers.AuthController (CeceLearningPortal.Api).
2025-08-03 11:23:28.569 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2025-08-03 11:23:28.713 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p1='?', @p2='?', @p0='?' (DbType = DateTime), @p3='?' (DbType = DateTime), @p4='?', @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = DateTime), @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "LastLoginAt" = @p0
WHERE "Id" = @p1 AND "ConcurrencyStamp" = @p2;
INSERT INTO refresh_tokens (created_at, created_by_ip, expires_at, replaced_by_token, revoked_at, revoked_by_ip, token, user_id)
VALUES (@p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING id;
2025-08-03 11:23:28.716 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.AuthResponseDto'.
2025-08-03 11:23:28.717 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.AuthController.Login (CeceLearningPortal.Api) in 174.6774ms
2025-08-03 11:23:28.717 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.AuthController.Login (CeceLearningPortal.Api)'
2025-08-03 11:23:28.717 +08:00 [INF] Request finished HTTP/1.1 POST http://localhost:5294/api/auth/login - 200 null application/json; charset=utf-8 176.412ms
2025-08-03 11:23:28.758 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 11:23:28.758 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 11:23:28.771 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.771 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.771 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 13.197ms
2025-08-03 11:23:28.772 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 13.1762ms
2025-08-03 11:23:28.774 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 11:23:28.774 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 11:23:28.774 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.775 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.779 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:28.779 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:28.779 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 11:23:28.786 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 11:23:28.793 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 11:23:28.794 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 14.5699ms
2025-08-03 11:23:28.794 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:28.794 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 20.577ms
2025-08-03 11:23:28.801 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - null null
2025-08-03 11:23:28.803 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:28.804 +08:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 11:23:28.804 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-08-03 11:23:28.806 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 403 0 null 30.512ms
2025-08-03 11:23:28.808 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.808 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - 204 null null 6.9501ms
2025-08-03 11:23:28.810 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - application/json null
2025-08-03 11:23:28.812 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.815 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:28.815 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - 404 0 null 5.0897ms
2025-08-03 11:23:28.815 +08:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats, Response status code: 404
2025-08-03 11:23:28.850 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 11:23:28.850 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.850 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.3629ms
2025-08-03 11:23:28.852 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 11:23:28.852 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:28.863 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:28.864 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:28.864 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 11:23:28.874 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 11:23:28.877 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 11:23:28.877 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 13.5079ms
2025-08-03 11:23:28.877 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:28.878 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 25.93ms
2025-08-03 11:23:31.745 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 11:23:31.745 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.747 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:31.748 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:31.748 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 11:23:31.759 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 11:23:31.764 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 11:23:31.765 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 16.4446ms
2025-08-03 11:23:31.765 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 11:23:31.765 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 20.7844ms
2025-08-03 11:23:31.769 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 11:23:31.769 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.771 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:31.771 +08:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 11:23:31.771 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-08-03 11:23:31.771 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 403 0 null 2.8029ms
2025-08-03 11:23:31.817 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 11:23:31.817 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.820 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:31.820 +08:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 11:23:31.820 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2025-08-03 11:23:31.820 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 403 0 null 3.325ms
2025-08-03 11:23:31.832 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 11:23:31.834 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.837 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 11:23:31.837 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 4.7042ms
2025-08-03 11:23:31.838 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.838 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.9263ms
2025-08-03 11:23:31.839 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 11:23:31.841 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 11:23:31.842 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.843 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:31.846 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:31.847 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.AnalyticsController.GetInstructorAnalytics (CeceLearningPortal.Api)'
2025-08-03 11:23:31.847 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:31.848 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 11:23:31.860 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 11:23:31.860 +08:00 [INF] Route matched with {action = "GetInstructorAnalytics", controller = "Analytics"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorAnalytics(System.String) on controller CeceLearningPortal.Api.Controllers.AnalyticsController (CeceLearningPortal.Api).
2025-08-03 11:23:31.891 +08:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-08-03 11:23:31.902 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 11:23:31.915 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 11:23:31.934 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, s.id, s.average_quiz_score, s.certificate_issued, s.certificate_url, s.completed_at, s.completed_lessons, s.course_id, s.enrolled_at, s.last_accessed_date, s.progress_percentage, s.quiz_count, s.student_id, s.total_time_spent, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status", s."TwoFactorEnabled", s."UserName", c0.id, c0.approved_at, c0.approved_by, c0.comment, c0.course_id, c0.created_at, c0.is_flagged, c0.rating, c0.status, c0.student_id
FROM courses AS c
LEFT JOIN (
    SELECT e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
    FROM enrollments AS e
    INNER JOIN "AspNetUsers" AS a ON e.student_id = a."Id"
) AS s ON c.id = s.course_id
LEFT JOIN course_reviews AS c0 ON c.id = c0.course_id
WHERE c.instructor_id = @__instructorId_0
ORDER BY c.id, s.id, s."Id0"
2025-08-03 11:23:31.955 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.966 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
LEFT JOIN courses AS c ON t.course_id = c.id
WHERE c.instructor_id = @__instructorId_0 AND t.status = 'Completed'
2025-08-03 11:23:31.969 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.977 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.980 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.981 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.982 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.983 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.984 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.985 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.986 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.986 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.987 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.988 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.989 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.990 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.991 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.992 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.993 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.994 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.995 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.996 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.997 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:31.998 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:31.999 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:32.000 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 11:23:32.000 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:32.001 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 11:23:32.002 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 11:23:32.009 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 148.5855ms
2025-08-03 11:23:32.009 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 11:23:32.009 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 168.5977ms
2025-08-03 11:23:32.021 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?', @__twelveMonthsAgo_1='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
SELECT s."Year", s."Month", COALESCE(sum(s.amount), 0.0) AS "Revenue"
FROM (
    SELECT t.amount, date_part('year', t.created_at AT TIME ZONE 'UTC')::int AS "Year", date_part('month', t.created_at AT TIME ZONE 'UTC')::int AS "Month"
    FROM transactions AS t
    LEFT JOIN courses AS c ON t.course_id = c.id
    WHERE c.instructor_id = @__instructorId_0 AND t.status = 'Completed' AND t.created_at >= @__twelveMonthsAgo_1
) AS s
GROUP BY s."Year", s."Month"
ORDER BY s."Year", s."Month"
2025-08-03 11:23:32.033 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.035 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.037 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.037 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.038 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.040 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.040 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.041 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.042 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__c_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT COALESCE(sum(t.amount), 0.0)
FROM transactions AS t
WHERE t.course_id = @__c_Id_0 AND t.status = 'Completed'
2025-08-03 11:23:32.073 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."FullName", s.title, s.enrolled_at
FROM (
    SELECT e.enrolled_at, e.student_id, c.title
    FROM enrollments AS e
    INNER JOIN courses AS c ON e.course_id = c.id
    WHERE c.instructor_id = @__instructorId_0
    ORDER BY e.enrolled_at DESC
    LIMIT @__p_1
) AS s
INNER JOIN "AspNetUsers" AS a ON s.student_id = a."Id"
ORDER BY s.enrolled_at DESC
2025-08-03 11:23:32.082 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?', @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."FullName", s.title, s.created_at, s.rating
FROM (
    SELECT c.created_at, c.rating, c.student_id, c0.title
    FROM course_reviews AS c
    INNER JOIN courses AS c0 ON c.course_id = c0.id
    WHERE c0.instructor_id = @__instructorId_0
    ORDER BY c.created_at DESC
    LIMIT @__p_1
) AS s
INNER JOIN "AspNetUsers" AS a ON s.student_id = a."Id"
ORDER BY s.created_at DESC
2025-08-03 11:23:32.085 +08:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType18`5[[<>f__AnonymousType19`6[[System.Decimal, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[System.Collections.Generic.List`1[[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-08-03 11:23:32.098 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.AnalyticsController.GetInstructorAnalytics (CeceLearningPortal.Api) in 237.35ms
2025-08-03 11:23:32.098 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.AnalyticsController.GetInstructorAnalytics (CeceLearningPortal.Api)'
2025-08-03 11:23:32.098 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 258.9879ms
2025-08-03 11:23:34.283 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - null null
2025-08-03 11:23:34.284 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:34.284 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - 204 null null 0.94ms
2025-08-03 11:23:34.286 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/34 - application/json null
2025-08-03 11:23:34.286 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:34.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:34.289 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 11:23:34.289 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 11:23:34.298 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 11:23:34.300 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 11:23:34.301 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 11.7913ms
2025-08-03 11:23:34.301 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 11:23:34.301 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/34 - 200 null application/json; charset=utf-8 15.1424ms
2025-08-03 11:23:34.306 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - null null
2025-08-03 11:23:34.306 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:34.307 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - 204 null null 0.5604ms
2025-08-03 11:23:34.309 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/enrollments - application/json null
2025-08-03 11:23:34.310 +08:00 [INF] CORS policy execution successful.
2025-08-03 11:23:34.311 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 11:23:34.311 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.EnrollmentsController.GetMyEnrollments (CeceLearningPortal.Api)'
2025-08-03 11:23:34.312 +08:00 [INF] Route matched with {action = "GetMyEnrollments", controller = "Enrollments"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyEnrollments() on controller CeceLearningPortal.Api.Controllers.EnrollmentsController (CeceLearningPortal.Api).
2025-08-03 11:23:34.316 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__studentId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT e.id AS "Id", e.student_id AS "StudentId", a."FullName" AS "StudentName", e.course_id AS "CourseId", c.title AS "CourseTitle", c.thumbnail AS "CourseThumbnail", a0."FullName" AS "InstructorName", e.enrolled_at AS "EnrolledAt", e.completed_at AS "CompletedAt", e.progress_percentage AS "ProgressPercentage", e.certificate_url AS "CertificateUrl"
FROM enrollments AS e
INNER JOIN "AspNetUsers" AS a ON e.student_id = a."Id"
INNER JOIN courses AS c ON e.course_id = c.id
INNER JOIN "AspNetUsers" AS a0 ON c.instructor_id = a0."Id"
WHERE e.student_id = @__studentId_0
2025-08-03 11:23:34.316 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[CeceLearningPortal.Api.DTOs.EnrollmentDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 11:23:34.316 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.EnrollmentsController.GetMyEnrollments (CeceLearningPortal.Api) in 4.5855ms
2025-08-03 11:23:34.317 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.EnrollmentsController.GetMyEnrollments (CeceLearningPortal.Api)'
2025-08-03 11:23:34.317 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/enrollments - 200 null application/json; charset=utf-8 7.6175ms
2025-08-03 13:24:40.345 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - null null
2025-08-03 13:24:40.356 +08:00 [INF] CORS policy execution successful.
2025-08-03 13:24:40.360 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - 204 null null 15.5781ms
2025-08-03 13:24:40.366 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/34 - application/json null
2025-08-03 13:24:40.367 +08:00 [INF] CORS policy execution successful.
2025-08-03 13:24:40.367 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 13:24:40.367 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 13:24:40.499 +08:00 [INF] Executed DbCommand (58ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 13:24:40.501 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 13:24:40.501 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 133.918ms
2025-08-03 13:24:40.501 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 13:24:40.501 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/34 - 200 null application/json; charset=utf-8 134.9783ms
2025-08-03 22:42:29.530 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:42:29.531 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.531 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.9982ms
2025-08-03 22:42:29.532 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:42:29.532 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.533 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:29.534 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.534 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.554 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:29.554 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:42:29.554 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:42:29.569 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:42:29.571 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:42:29.572 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 17.2764ms
2025-08-03 22:42:29.572 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:42:29.572 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 40.0534ms
2025-08-03 22:42:29.576 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:42:29.577 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.577 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.3774ms
2025-08-03 22:42:29.578 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:42:29.578 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.578 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:29.579 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.579 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.580 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:29.580 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:42:29.580 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:42:29.581 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.8589ms
2025-08-03 22:42:29.614 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:42:29.614 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.615 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:29.615 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.615 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.617 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:29.617 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:42:29.617 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:42:29.617 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.4431ms
2025-08-03 22:42:29.629 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:42:29.629 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:42:29.629 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.630 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.630 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6399ms
2025-08-03 22:42:29.630 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.835ms
2025-08-03 22:42:29.631 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:42:29.632 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.633 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:29.635 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.632 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:42:29.635 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:29.636 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.636 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:29.637 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.637 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:29 PM'.
2025-08-03 22:42:29.637 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:29.638 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:42:29.638 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:42:29.638 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 6.5129ms
2025-08-03 22:42:29.638 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:29.639 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:42:29.639 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:42:29.647 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:42:29.649 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:42:29.651 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.655 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.657 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.658 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.661 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.662 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.663 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.664 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.665 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.666 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.668 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.669 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.670 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.671 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.672 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.673 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.675 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.676 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.677 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.679 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.679 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.680 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.681 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.682 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.682 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:29.684 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.685 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:29.685 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:42:29.686 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 46.4131ms
2025-08-03 22:42:29.686 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:42:29.686 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 53.6895ms
2025-08-03 22:42:33.824 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:42:33.824 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:33.825 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:33 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:33.825 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:33 PM'.
2025-08-03 22:42:33.825 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:33 PM'.
2025-08-03 22:42:33.827 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:33.827 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:42:33.827 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:42:33.833 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:42:33.836 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:42:33.837 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 9.4326ms
2025-08-03 22:42:33.837 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:42:33.837 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 13.5791ms
2025-08-03 22:42:33.877 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:42:33.877 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:33.878 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:33 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:33.879 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:33 PM'.
2025-08-03 22:42:33.879 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:33 PM'.
2025-08-03 22:42:33.881 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:33.882 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:42:33.883 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:42:33.884 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 6.7588ms
2025-08-03 22:42:34.358 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:42:34.358 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:34.358 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:34.359 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
2025-08-03 22:42:34.359 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
2025-08-03 22:42:34.360 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:34.360 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:42:34.360 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:42:34.361 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.8234ms
2025-08-03 22:42:34.366 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:42:34.367 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:34.367 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:34.368 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
2025-08-03 22:42:34.368 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
2025-08-03 22:42:34.370 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:42:34.384 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:42:34.385 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:42:34.386 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
2025-08-03 22:42:34.386 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:42:34 PM'.
2025-08-03 22:42:34.388 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:34.390 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:42:34.390 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:42:34.390 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 24.3877ms
2025-08-03 22:42:34.426 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:42:34.426 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:42:34.426 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:42:34.428 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:42:34.430 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:42:34.431 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.434 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.435 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.436 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.437 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.439 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.440 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.442 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.443 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.444 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.445 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.446 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.447 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.448 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.450 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.451 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.451 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.452 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.453 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.454 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.455 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.457 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.458 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.459 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.461 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:42:34.462 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.463 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:42:34.464 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:42:34.464 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 37.3047ms
2025-08-03 22:42:34.464 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:42:34.464 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 94.5997ms
2025-08-03 22:45:59.997 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:45:59.998 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:45:59.998 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 1.3119ms
2025-08-03 22:45:59.999 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:46:00.000 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.001 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:00.001 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.002 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.004 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:00.005 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:00.005 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:00.011 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:46:00.014 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:46:00.014 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 9.2763ms
2025-08-03 22:46:00.015 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:00.015 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 15.7978ms
2025-08-03 22:46:00.026 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:46:00.028 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.028 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 2.368ms
2025-08-03 22:46:00.030 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:00.031 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.031 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:00.032 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.034 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.039 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:00.040 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:00.041 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:00.041 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 10.38ms
2025-08-03 22:46:00.045 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:00.045 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:00.045 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:00.045 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.046 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.045 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.046 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.7128ms
2025-08-03 22:46:00.046 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:00.046 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.1054ms
2025-08-03 22:46:00.048 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.047 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:00.048 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:00.048 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.048 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.049 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:00.049 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:00.050 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.050 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.051 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:00.052 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.052 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:00 PM'.
2025-08-03 22:46:00.052 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:00.053 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:00.053 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:00.053 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:46:00.053 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:00.054 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:00.054 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 9.391ms
2025-08-03 22:46:00.057 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:00.057 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:00.057 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:00.058 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 9.3858ms
2025-08-03 22:46:00.063 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:46:00.064 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:46:00.067 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.070 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.071 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.072 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.073 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.075 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.077 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.078 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.079 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.080 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.081 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.083 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.096 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.098 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.099 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.103 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.105 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.106 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.106 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.108 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.108 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.109 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.109 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.110 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.111 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:00.111 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.112 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:00.112 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:46:00.112 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 58.6084ms
2025-08-03 22:46:00.112 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:00.113 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 65.2184ms
2025-08-03 22:46:02.869 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:46:02.870 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:02.870 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:02.871 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
2025-08-03 22:46:02.871 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
2025-08-03 22:46:02.872 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:02.872 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:02.872 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:02.902 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:46:02.905 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:46:02.905 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 32.6154ms
2025-08-03 22:46:02.905 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:02.906 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 36.3293ms
2025-08-03 22:46:02.907 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:46:02.907 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:02.908 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:02.909 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
2025-08-03 22:46:02.909 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
2025-08-03 22:46:02.910 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:02.911 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:02.911 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:02.918 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:46:02.920 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:46:02.921 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 9.8939ms
2025-08-03 22:46:02.921 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:02.922 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 15.1798ms
2025-08-03 22:46:02.971 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:02.972 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:02.972 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:02.972 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
2025-08-03 22:46:02.973 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:02 PM'.
2025-08-03 22:46:02.974 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:02.974 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:02.974 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:02.974 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.0185ms
2025-08-03 22:46:03.019 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:03.020 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:03.020 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:03.021 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.021 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.024 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:03.024 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:03.025 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:03.025 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 5.5093ms
2025-08-03 22:46:03.037 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:03.037 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:03.037 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:03.038 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.038 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.040 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:03.040 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:03.041 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:03.041 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.1969ms
2025-08-03 22:46:03.074 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:03.074 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:03.075 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:03.076 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.076 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.078 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:03.078 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:03.078 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:03.078 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.5755ms
2025-08-03 22:46:03.105 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:03.106 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:03.106 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:03.106 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:03.107 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:03.107 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:03.108 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.108 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.108 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.108 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:03 PM'.
2025-08-03 22:46:03.111 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:03.111 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:03.112 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:03.112 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:03.112 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:46:03.113 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:03.113 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 8.0831ms
2025-08-03 22:46:03.121 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:46:03.124 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:46:03.129 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.131 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.132 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.135 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.137 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.140 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.143 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.144 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.147 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.148 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.151 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.153 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.154 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.156 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.158 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.159 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.161 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.162 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.163 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.165 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.169 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.171 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.172 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.174 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.176 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:03.177 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.178 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:03.178 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:46:03.178 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 65.1733ms
2025-08-03 22:46:03.178 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:03.179 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 72.499ms
2025-08-03 22:46:05.760 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - null null
2025-08-03 22:46:05.760 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:05.760 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - 204 null null 0.5359ms
2025-08-03 22:46:05.761 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/34 - application/json null
2025-08-03 22:46:05.762 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:05.762 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:05.762 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:05 PM'.
2025-08-03 22:46:05.762 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:05 PM'.
2025-08-03 22:46:05.764 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:05.764 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 22:46:05.764 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:05.771 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 22:46:05.772 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 22:46:05.772 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 7.8877ms
2025-08-03 22:46:05.772 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 22:46:05.772 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/34 - 200 null application/json; charset=utf-8 10.9254ms
2025-08-03 22:46:05.779 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - null null
2025-08-03 22:46:05.779 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:05.779 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - 204 null null 0.6097ms
2025-08-03 22:46:05.780 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/enrollments - application/json null
2025-08-03 22:46:05.780 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:05.781 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:05.781 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:05 PM'.
2025-08-03 22:46:05.781 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:05 PM'.
2025-08-03 22:46:05.783 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:05.783 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:05.784 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:05.784 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/enrollments - 401 0 null 3.4853ms
2025-08-03 22:46:12.255 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:46:12.255 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.255 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.588ms
2025-08-03 22:46:12.256 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:46:12.257 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.258 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:12.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.260 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:12.260 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:12.260 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:12.269 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:46:12.275 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:46:12.275 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 15.1362ms
2025-08-03 22:46:12.276 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:12.276 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 19.3187ms
2025-08-03 22:46:12.278 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:46:12.278 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.278 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.2888ms
2025-08-03 22:46:12.279 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:12.279 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.280 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:12.282 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.283 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:12.286 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:12.286 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:12.286 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 7.0419ms
2025-08-03 22:46:12.306 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:12.306 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.307 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:12.308 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.308 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.311 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:12.312 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:12.312 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:12.312 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 6.173ms
2025-08-03 22:46:12.322 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:12.322 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:12.322 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.322 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.322 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6343ms
2025-08-03 22:46:12.322 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5854ms
2025-08-03 22:46:12.324 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:12.324 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:12.324 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.324 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:12.324 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:12.324 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:12.325 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.325 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.326 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.326 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:12 PM'.
2025-08-03 22:46:12.327 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:12.327 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:12.327 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:12.327 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:12.328 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:46:12.328 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:12.328 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.4293ms
2025-08-03 22:46:12.330 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:46:12.331 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:46:12.334 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.336 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.337 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.340 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.342 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.343 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.345 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.346 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.350 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.351 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.353 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.354 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.355 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.356 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.358 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.359 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.360 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.361 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.362 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.364 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.365 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.367 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.369 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.372 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.373 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:12.375 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.376 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:12.376 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:46:12.376 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 48.5015ms
2025-08-03 22:46:12.376 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:12.376 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 52.5313ms
2025-08-03 22:46:20.830 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:20.830 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:20.830 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.2974ms
2025-08-03 22:46:20.831 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:20.831 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:20.832 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:20 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:20.833 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:20 PM'.
2025-08-03 22:46:20.833 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:20 PM'.
2025-08-03 22:46:20.834 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:20.835 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:20.835 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:20.835 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.6064ms
2025-08-03 22:46:21.782 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:21.782 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:21.782 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4414ms
2025-08-03 22:46:21.783 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:21.784 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:21.784 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:21 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:21.784 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:21 PM'.
2025-08-03 22:46:21.785 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:21 PM'.
2025-08-03 22:46:21.786 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:21.786 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:21.786 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:46:21.788 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:46:21.789 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:46:21.790 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.791 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.792 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.792 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.793 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.794 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.794 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.795 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.796 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.796 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.797 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.799 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.801 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.803 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.804 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.804 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.805 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.806 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.807 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.808 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.808 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.809 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.809 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.810 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.812 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:21.813 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.813 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:21.814 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:46:21.814 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 27.4878ms
2025-08-03 22:46:21.814 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:21.814 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 30.57ms
2025-08-03 22:46:21.817 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:21.818 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:21.818 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:21 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:21.819 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:21 PM'.
2025-08-03 22:46:21.819 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:21 PM'.
2025-08-03 22:46:21.821 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:21.822 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:21.822 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:21.822 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.5488ms
2025-08-03 22:46:41.069 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:41.069 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:41.069 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.3099ms
2025-08-03 22:46:41.070 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:41.070 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:41.070 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:41 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:41.071 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:41 PM'.
2025-08-03 22:46:41.071 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:41 PM'.
2025-08-03 22:46:41.072 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:41.072 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:41.072 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:46:41.074 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:46:41.076 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:46:41.079 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.080 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.082 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.083 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.084 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.086 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.088 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.089 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.090 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.091 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.092 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.093 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.093 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.094 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.095 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.095 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.096 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.097 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.100 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.102 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.104 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.105 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.106 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.107 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.108 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:41.108 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.109 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:41.109 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:46:41.109 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 36.8141ms
2025-08-03 22:46:41.109 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:41.109 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 39.726ms
2025-08-03 22:46:41.111 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:46:41.111 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:41.112 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.2917ms
2025-08-03 22:46:41.112 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:41.112 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:41.113 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:41 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:41.113 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:41 PM'.
2025-08-03 22:46:41.113 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:41 PM'.
2025-08-03 22:46:41.115 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:41.116 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:41.116 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:41.116 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.9022ms
2025-08-03 22:46:42.253 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:46:42.254 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.254 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.4043ms
2025-08-03 22:46:42.256 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:46:42.256 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.257 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:42.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.260 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:42.261 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:42.261 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:42.272 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:46:42.274 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:46:42.274 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 13.0822ms
2025-08-03 22:46:42.275 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:46:42.275 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 18.9058ms
2025-08-03 22:46:42.278 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:46:42.279 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.279 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.6052ms
2025-08-03 22:46:42.281 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:42.281 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.282 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:42.282 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.282 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.284 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:42.285 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:42.285 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:42.285 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.2251ms
2025-08-03 22:46:42.297 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:46:42.297 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:42.297 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:42.297 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.297 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.297 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.298 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:42.298 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:42.298 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:42.298 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.298 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.299 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.299 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.299 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.299 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.300 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:42.300 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:42.301 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:46:42.301 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:42.301 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:42.301 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:46:42.301 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.2452ms
2025-08-03 22:46:42.302 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:46:42.304 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:46:42.305 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.306 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.307 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.307 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.309 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.310 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.310 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.311 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.312 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.313 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.314 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.314 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:42.314 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:42.315 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:42.315 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 18.4038ms
2025-08-03 22:46:42.315 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.317 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.331 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.332 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.333 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.334 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.334 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.335 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.336 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.337 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.338 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.338 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.339 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.340 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:46:42.340 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.341 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:46:42.341 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:46:42.341 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 40.3869ms
2025-08-03 22:46:42.341 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:46:42.342 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 45.1329ms
2025-08-03 22:46:42.827 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:46:42.827 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:42.827 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:42.828 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.828 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:42 PM'.
2025-08-03 22:46:42.829 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:42.829 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:46:42.829 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:46:42.829 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 2.4245ms
2025-08-03 22:46:46.942 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - null null
2025-08-03 22:46:46.942 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:46.942 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - 204 null null 0.5287ms
2025-08-03 22:46:46.944 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/34 - application/json null
2025-08-03 22:46:46.944 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:46:46.944 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:46 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:46:46.944 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:46 PM'.
2025-08-03 22:46:46.944 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:46:46 PM'.
2025-08-03 22:46:46.946 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:46:46.946 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 22:46:46.946 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:46:46.951 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 22:46:46.953 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 22:46:46.953 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 6.9041ms
2025-08-03 22:46:46.953 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 22:46:46.954 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/34 - 200 null application/json; charset=utf-8 10.3606ms
2025-08-03 22:47:04.601 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/33 - null null
2025-08-03 22:47:04.602 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:04.602 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/33 - 204 null null 0.5212ms
2025-08-03 22:47:04.603 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/33 - application/json null
2025-08-03 22:47:04.603 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:04.603 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:04.604 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:04 PM'.
2025-08-03 22:47:04.604 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:04 PM'.
2025-08-03 22:47:04.606 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:04.606 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 22:47:04.606 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:47:04.624 +08:00 [INF] Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 22:47:04.625 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 22:47:04.626 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 19.1563ms
2025-08-03 22:47:04.626 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 22:47:04.626 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/33 - 200 null application/json; charset=utf-8 23.1249ms
2025-08-03 22:47:04.631 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - null null
2025-08-03 22:47:04.632 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:04.632 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - 204 null null 0.7704ms
2025-08-03 22:47:04.635 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/enrollments - application/json null
2025-08-03 22:47:04.635 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:04.636 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:04.637 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:04 PM'.
2025-08-03 22:47:04.637 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:04 PM'.
2025-08-03 22:47:04.639 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:04.639 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:47:04.639 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:04.640 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/enrollments - 401 0 null 4.8298ms
2025-08-03 22:47:08.747 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:47:08.748 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.748 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.4644ms
2025-08-03 22:47:08.749 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:47:08.749 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.750 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:08.750 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.750 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.751 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:08.752 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:47:08.752 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:47:08.757 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:47:08.759 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:47:08.760 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 8.2385ms
2025-08-03 22:47:08.760 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:47:08.760 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 11.5486ms
2025-08-03 22:47:08.765 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:47:08.766 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.766 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.3125ms
2025-08-03 22:47:08.766 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:47:08.767 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.767 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:08.767 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.767 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.769 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:08.770 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:47:08.770 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:08.770 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.5051ms
2025-08-03 22:47:08.794 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:47:08.795 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.795 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:08.795 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.795 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.796 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:08.796 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:47:08.796 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:08.797 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.2252ms
2025-08-03 22:47:08.806 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:47:08.806 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:47:08.806 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.806 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.806 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4667ms
2025-08-03 22:47:08.806 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4564ms
2025-08-03 22:47:08.808 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:47:08.808 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:47:08.808 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.808 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:08.808 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:08.808 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:08.809 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.809 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.809 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.809 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:08 PM'.
2025-08-03 22:47:08.810 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:08.810 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:08.811 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:47:08.811 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:47:08.811 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:08.811 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:47:08.811 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.7743ms
2025-08-03 22:47:08.814 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:47:08.815 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:47:08.817 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.819 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.821 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.822 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.824 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.836 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.838 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.839 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.842 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.844 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.845 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.846 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.847 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.848 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.849 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.849 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.850 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.852 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.852 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.853 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.854 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.855 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.855 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.856 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.856 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:08.857 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.858 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:08.858 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:47:08.858 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 46.7274ms
2025-08-03 22:47:08.858 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:47:08.859 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 50.8734ms
2025-08-03 22:47:32.902 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:47:32.902 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.902 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.4328ms
2025-08-03 22:47:32.904 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:47:32.904 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.904 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:32.905 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.905 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.907 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:32.908 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:47:32.908 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:47:32.916 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:47:32.919 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:47:32.937 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 28.7726ms
2025-08-03 22:47:32.938 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:47:32.938 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 34.9252ms
2025-08-03 22:47:32.962 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:47:32.963 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.963 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.4543ms
2025-08-03 22:47:32.964 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:47:32.965 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.965 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:32.966 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.966 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.967 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:32.967 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:47:32.967 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:32.967 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.0819ms
2025-08-03 22:47:32.980 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:47:32.981 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.981 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:47:32.981 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:47:32.981 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:32.981 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.981 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.981 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.981 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6196ms
2025-08-03 22:47:32.981 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.982 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.0446ms
2025-08-03 22:47:32.983 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:47:32.984 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:47:32.984 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:32.984 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.984 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:47:32.984 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:47:32.984 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:32.984 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:32.984 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:47:32.984 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.1441ms
2025-08-03 22:47:32.985 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.985 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.986 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.986 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:47:32 PM'.
2025-08-03 22:47:32.988 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:32.988 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:47:32.989 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:47:32.991 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:47:32.992 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:47:32.993 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:32.994 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:32.995 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:32.996 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:32.998 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:32.999 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.001 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.002 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.005 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.006 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.008 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:47:33.008 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.008 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:47:33.008 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:47:33.008 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 24.7656ms
2025-08-03 22:47:33.012 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.013 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.015 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.016 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.017 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.018 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.019 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.020 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.021 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.022 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.022 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.023 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.024 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.024 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:47:33.025 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.026 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:47:33.026 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:47:33.026 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 37.3283ms
2025-08-03 22:47:33.026 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:47:33.026 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 42.8199ms
2025-08-03 22:50:12.023 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:50:12.024 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:50:12.024 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.024 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.024 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.8711ms
2025-08-03 22:50:12.026 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 2.3726ms
2025-08-03 22:50:12.026 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:50:12.027 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.027 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:50:12.028 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:50:12.028 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.028 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.028 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.030 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:50:12.031 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.031 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.032 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:50:12.033 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:50:12.033 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:50:12.037 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:50:12.037 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:50:12.038 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:50:12.038 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 10.0908ms
2025-08-03 22:50:12.063 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:50:12.070 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:50:12.070 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 36.814ms
2025-08-03 22:50:12.071 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:50:12.071 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 44.866ms
2025-08-03 22:50:12.092 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:50:12.092 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.093 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:50:12.093 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.093 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.094 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:50:12.095 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:50:12.095 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:50:12.095 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.186ms
2025-08-03 22:50:12.126 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:50:12.126 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.127 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:50:12.127 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.128 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.129 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:50:12.129 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.130 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5979ms
2025-08-03 22:50:12.130 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:50:12.131 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.133 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 3.5571ms
2025-08-03 22:50:12.135 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:50:12.135 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.136 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:50:12.136 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:50:12.136 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:50:12.137 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:50:12.137 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.137 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:50:12.137 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.137 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:50:12.137 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:50:12.138 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 11.7717ms
2025-08-03 22:50:12.138 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.139 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:50:12 PM'.
2025-08-03 22:50:12.141 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:50:12.141 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:50:12.141 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:50:12.141 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:50:12.141 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:50:12.141 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 6.7064ms
2025-08-03 22:50:12.141 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:50:12.144 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:50:12.155 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:50:12.156 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.158 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.159 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.160 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.162 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.164 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.168 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.171 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.172 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.175 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.176 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.177 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.178 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.179 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.180 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.185 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.186 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.188 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.188 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.189 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.190 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.191 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.191 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.192 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.193 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:50:12.194 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.194 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:50:12.195 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:50:12.195 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 53.231ms
2025-08-03 22:50:12.195 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:50:12.195 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 59.3762ms
2025-08-03 22:51:10.002 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 22:51:10.002 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 22:51:10.002 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.002 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.002 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.7012ms
2025-08-03 22:51:10.002 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.6469ms
2025-08-03 22:51:10.004 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:51:10.004 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 22:51:10.004 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.004 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.005 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:51:10.005 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:51:10.005 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.005 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.005 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.006 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.007 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:51:10.007 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:51:10.008 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:51:10.008 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:51:10.008 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:51:10.008 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.3652ms
2025-08-03 22:51:10.008 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 22:51:10.013 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 22:51:10.016 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 22:51:10.018 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 9.1219ms
2025-08-03 22:51:10.018 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 22:51:10.018 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 14.4356ms
2025-08-03 22:51:10.060 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:51:10.060 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.061 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:51:10.061 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.061 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.065 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:51:10.065 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:51:10.065 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:51:10.065 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 5.3865ms
2025-08-03 22:51:10.084 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 22:51:10.084 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:51:10.084 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 22:51:10.084 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.084 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.084 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.084 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.3919ms
2025-08-03 22:51:10.085 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.649ms
2025-08-03 22:51:10.085 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:51:10.085 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.085 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.086 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:51:10.086 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 22:51:10.086 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.086 +08:00 [INF] CORS policy execution successful.
2025-08-03 22:51:10.086 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:51:10.086 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 22:51:10.087 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:51:10.087 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.087 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.087 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 22:51:10.087 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.087 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 2:51:10 PM'.
2025-08-03 22:51:10.087 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:51:10.088 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.6614ms
2025-08-03 22:51:10.089 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:51:10.089 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 22:51:10.090 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 22:51:10.090 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 22:51:10.091 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 5.6684ms
2025-08-03 22:51:10.091 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:51:10.092 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 22:51:10.095 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 22:51:10.100 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 22:51:10.103 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.104 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.105 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.106 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.108 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.110 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.111 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.112 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.113 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.115 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.116 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.119 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.121 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.122 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.124 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.125 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.126 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.127 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.128 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.128 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.134 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.135 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.136 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.137 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.138 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 22:51:10.139 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.139 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 22:51:10.140 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 22:51:10.140 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 47.353ms
2025-08-03 22:51:10.140 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 22:51:10.140 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 54.3789ms
2025-08-03 23:02:05.076 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:02:05.076 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.077 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 1.5161ms
2025-08-03 23:02:05.092 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:02:05.092 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.093 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:05.094 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.094 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.121 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:05.121 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:05.121 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:02:05.162 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:02:05.165 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:02:05.167 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 45.3299ms
2025-08-03 23:02:05.167 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:05.167 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 75.7954ms
2025-08-03 23:02:05.172 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:02:05.172 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.172 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.5595ms
2025-08-03 23:02:05.174 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:05.174 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.175 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:05.176 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.176 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.196 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:05.197 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:05.197 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:05.198 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 23.6552ms
2025-08-03 23:02:05.205 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:05.205 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:02:05.205 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.205 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.206 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4432ms
2025-08-03 23:02:05.206 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:05.206 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:02:05.207 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.207 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.207 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.207 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.7214ms
2025-08-03 23:02:05.208 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:02:05.208 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.208 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:02:05.209 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:05.209 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:05.209 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:05.209 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:05.210 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:05.210 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.210 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:05.210 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.211 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.211 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 5.9677ms
2025-08-03 23:02:05.211 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:05 PM'.
2025-08-03 23:02:05.214 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:05.216 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:02:05.217 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:05.217 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 8.7991ms
2025-08-03 23:02:05.234 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:05.234 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:02:05.234 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:02:05.236 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:02:05.238 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:02:05.239 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.256 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.258 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.259 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.260 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.262 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.263 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.265 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.266 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.267 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.268 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.269 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.270 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.270 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.271 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.272 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.273 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.274 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.275 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.276 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.277 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.278 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.281 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:05.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.289 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:05.290 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:02:05.290 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 55.313ms
2025-08-03 23:02:05.290 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:02:05.290 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 81.7625ms
2025-08-03 23:02:07.755 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:02:07.755 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.756 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.756 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.756 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.758 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.758 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:07.758 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:02:07.761 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:02:07.764 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:02:07.765 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 6.6371ms
2025-08-03 23:02:07.765 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:07.765 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 10.2068ms
2025-08-03 23:02:07.804 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:02:07.805 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.805 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.806 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.806 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.809 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.809 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:07.809 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:02:07.824 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:02:07.827 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:02:07.827 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 17.5027ms
2025-08-03 23:02:07.828 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:07.828 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 23.4668ms
2025-08-03 23:02:07.882 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:07.882 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.883 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.884 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.884 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.887 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.887 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:07.888 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:07.889 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 7.2951ms
2025-08-03 23:02:07.935 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:07.935 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.936 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.936 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.936 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.937 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.937 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:07.937 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:07.937 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.3702ms
2025-08-03 23:02:07.955 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:07.955 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.955 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.956 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.956 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.957 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.958 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:07.958 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:07.958 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.4476ms
2025-08-03 23:02:07.987 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:07.987 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.987 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.987 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:02:07.987 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:02:07.988 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.988 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.988 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:07.988 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.988 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.988 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:07.989 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.989 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.989 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.989 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:07 PM'.
2025-08-03 23:02:07.989 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.989 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:07.989 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:07.990 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.8421ms
2025-08-03 23:02:07.990 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.990 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:07.990 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:02:07.990 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:02:07.990 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:07.991 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:02:07.991 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.3284ms
2025-08-03 23:02:07.992 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:02:07.993 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:02:07.994 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:07.995 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:07.996 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:07.996 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:07.997 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:07.998 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:07.999 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.000 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.001 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.002 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.002 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.003 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.004 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.005 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.006 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.007 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.007 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.008 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.009 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.009 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.011 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.012 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.013 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.015 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.016 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:08.016 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.017 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:08.017 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:02:08.017 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 26.7576ms
2025-08-03 23:02:08.018 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:02:08.018 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 30.428ms
2025-08-03 23:02:09.275 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:02:09.278 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.285 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.287 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.288 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.293 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.294 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:09.294 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:02:09.303 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:02:09.312 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:02:09.313 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 18.7011ms
2025-08-03 23:02:09.313 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:09.313 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 37.9422ms
2025-08-03 23:02:09.315 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:02:09.316 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.317 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.322 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.322 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.326 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.327 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:09.328 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:02:09.329 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:09.329 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.330 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.330 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.330 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.334 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.335 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:09.335 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:09.335 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 6.0902ms
2025-08-03 23:02:09.336 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:02:09.353 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:02:09.353 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 24.7125ms
2025-08-03 23:02:09.354 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:02:09.355 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 39.8073ms
2025-08-03 23:02:09.372 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:09.372 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.373 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.376 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.376 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.379 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.379 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:09.380 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:09.380 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 8.6744ms
2025-08-03 23:02:09.410 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:09.410 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.411 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.414 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.414 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.418 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.419 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:09.419 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:09.419 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 9.3866ms
2025-08-03 23:02:09.444 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:02:09.444 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:02:09.444 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.444 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:02:09.444 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.445 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:02:09.445 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.445 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.445 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:02:09.445 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.445 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.446 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.446 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.446 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.446 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:02:09 PM'.
2025-08-03 23:02:09.447 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.447 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.448 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:02:09.448 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:02:09.448 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:09.448 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:02:09.449 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.7463ms
2025-08-03 23:02:09.449 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.8054ms
2025-08-03 23:02:09.463 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:02:09.464 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:02:09.464 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:02:09.467 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:02:09.468 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:02:09.472 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.475 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.477 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.478 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.480 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.483 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.484 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.485 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.487 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.488 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.489 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.490 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.491 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.492 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.493 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.494 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.495 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.495 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.496 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.497 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.498 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.499 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.500 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.501 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.502 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:02:09.503 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.503 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:02:09.503 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:02:09.504 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 39.6815ms
2025-08-03 23:02:09.504 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:02:09.504 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 59.733ms
2025-08-03 23:44:42.474 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:44:42.476 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.476 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 1.9219ms
2025-08-03 23:44:42.474 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:44:42.477 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.477 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 3.3345ms
2025-08-03 23:44:42.479 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:44:42.480 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.482 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.485 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.485 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.508 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.508 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:42.508 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:44:42.524 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:44:42.535 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:44:42.535 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 26.571ms
2025-08-03 23:44:42.535 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:42.535 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 55.8855ms
2025-08-03 23:44:42.537 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:44:42.537 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.538 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.538 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:44:42.541 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.541 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.541 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.541 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 2.7473ms
2025-08-03 23:44:42.543 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:42.543 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.544 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.544 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.544 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.545 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.545 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:42.545 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:44:42.555 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:44:42.585 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:44:42.586 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 40.4524ms
2025-08-03 23:44:42.586 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:42.586 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 49.7565ms
2025-08-03 23:44:42.590 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.590 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:42.590 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:42.590 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 47.7011ms
2025-08-03 23:44:42.592 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:42.593 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.593 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.594 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.594 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.596 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.596 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:42.596 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:42.597 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.4837ms
2025-08-03 23:44:42.598 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:42.599 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.599 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.600 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.600 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.602 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.602 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:42.603 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:42.603 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.564ms
2025-08-03 23:44:42.617 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:42.617 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.618 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.618 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:44:42.618 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:44:42.619 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:44:42.619 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.619 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.619 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.619 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.619 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:44:42.619 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.620 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.620 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.7369ms
2025-08-03 23:44:42.620 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.0827ms
2025-08-03 23:44:42.620 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.8328ms
2025-08-03 23:44:42.620 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.9334ms
2025-08-03 23:44:42.622 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.622 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:42.623 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:42.623 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 5.7946ms
2025-08-03 23:44:42.625 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:44:42.625 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.625 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:44:42.629 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.630 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.631 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.633 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.633 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.633 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.633 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.635 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.635 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:44:42.635 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:44:42.637 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.637 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:44:42.637 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:42.638 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 13.0405ms
2025-08-03 23:44:42.639 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:44:42.639 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.639 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.639 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:44:42.641 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.641 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.642 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:44:42.643 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.643 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:44:42.643 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:42.644 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.7921ms
2025-08-03 23:44:42.645 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.649 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.651 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.652 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.653 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.654 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.655 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.656 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.657 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.658 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.659 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.660 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.660 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.661 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.663 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.663 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.664 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.666 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.666 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.668 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.669 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.670 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.672 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.673 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.673 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.675 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.676 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.676 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:44:42.676 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 40.7857ms
2025-08-03 23:44:42.676 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:44:42.677 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 51.4485ms
2025-08-03 23:44:42.677 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:44:42.677 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:42.678 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:42.680 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.680 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:42 PM'.
2025-08-03 23:44:42.684 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:42.684 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:44:42.685 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:44:42.690 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:44:42.693 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:44:42.696 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.697 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.700 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.702 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.703 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.703 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.704 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.705 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.706 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.706 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.707 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.709 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.709 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.710 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.711 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.712 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.714 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.716 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.717 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.718 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.720 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.720 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.721 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.723 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.724 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:42.725 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.726 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:42.726 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:44:42.726 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 41.7622ms
2025-08-03 23:44:42.727 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:44:42.727 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 50.0719ms
2025-08-03 23:44:45.199 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:44:45.199 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.201 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.203 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.203 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.208 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.221 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:45.222 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:44:45.234 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:44:45.246 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:44:45.247 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 24.8106ms
2025-08-03 23:44:45.247 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:45.248 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 48.4868ms
2025-08-03 23:44:45.249 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:44:45.250 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.250 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.251 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.251 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.253 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.254 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:45.254 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:44:45.258 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:44:45.262 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:44:45.263 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 8.8607ms
2025-08-03 23:44:45.263 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:44:45.263 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 13.6518ms
2025-08-03 23:44:45.305 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:45.305 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.305 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.306 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.306 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.307 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.308 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:45.308 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:45.308 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.7942ms
2025-08-03 23:44:45.310 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:45.310 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.310 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.311 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.311 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.312 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.313 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:45.313 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:45.313 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.282ms
2025-08-03 23:44:45.354 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:44:45.354 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.354 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.355 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.355 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.356 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.356 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:44:45.356 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:45.356 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.7621ms
2025-08-03 23:44:45.372 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:44:45.372 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:44:45.372 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.372 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:44:45.372 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.373 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:44:45.373 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.373 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.373 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.373 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:44:45 PM'.
2025-08-03 23:44:45.375 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.375 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:44:45.375 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:44:45.376 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:44:45.376 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:44:45.376 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:44:45.376 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.1713ms
2025-08-03 23:44:45.379 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:44:45.380 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:44:45.382 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.385 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.386 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.388 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.389 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.391 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.392 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.393 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.394 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.395 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.396 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.397 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.400 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.403 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.404 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.405 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.406 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.407 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.408 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.410 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.412 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.413 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.414 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.414 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.415 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:44:45.416 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.417 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:44:45.417 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:44:45.417 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 41.3387ms
2025-08-03 23:44:45.417 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:44:45.417 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 45.5976ms
2025-08-03 23:45:07.546 +08:00 [INF] Checking database connection...
2025-08-03 23:45:09.090 +08:00 [INF] Database connection successful.
2025-08-03 23:45:09.090 +08:00 [INF] Attempting to apply migrations...
2025-08-03 23:45:09.206 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-03 23:45:09.628 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2025-08-03 23:45:09.649 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-08-03 23:45:09.653 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-08-03 23:45:09.660 +08:00 [INF] No migrations were applied. The database is already up to date.
2025-08-03 23:45:09.675 +08:00 [INF] Migrations applied successfully.
2025-08-03 23:45:09.675 +08:00 [INF] Starting data seeding...
2025-08-03 23:45:09.690 +08:00 [INF] User profile is available. Using '/Users/sherwinalegre/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-08-03 23:45:09.965 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM courses AS c)
2025-08-03 23:45:09.971 +08:00 [INF] Database already contains data. Checking if data cleanup is needed...
2025-08-03 23:45:09.971 +08:00 [INF] Skipping seed as data already exists. Set FORCE_RESEED=true to force reseeding.
2025-08-03 23:45:09.971 +08:00 [INF] Data seeding completed.
2025-08-03 23:45:10.064 +08:00 [INF] Now listening on: http://localhost:5294
2025-08-03 23:45:10.065 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-03 23:45:10.065 +08:00 [INF] Hosting environment: Development
2025-08-03 23:45:10.065 +08:00 [INF] Content root path: /Users/sherwinalegre/Documents/Cece/LearningPortal/Cece/CeceLearningPortal.Backend/CeceLearningPortal.Api
2025-08-03 23:45:14.142 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:45:14.210 +08:00 [WRN] Failed to determine the https port for redirect.
2025-08-03 23:45:14.211 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:14.220 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 79.2913ms
2025-08-03 23:45:14.227 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:45:14.236 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:14.330 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:14 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:14.349 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:14 PM'.
2025-08-03 23:45:14.353 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:14 PM'.
2025-08-03 23:45:14.518 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:14.524 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:14.566 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:45:15.038 +08:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-08-03 23:45:15.142 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:45:15.636 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:45:15.695 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:45:15.697 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.698 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 1125.1538ms
2025-08-03 23:45:15.699 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:15.702 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.703 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.704 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.709 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 1481.8523ms
2025-08-03 23:45:15.709 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:45:15.710 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.710 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.9196ms
2025-08-03 23:45:15.712 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:15.713 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.714 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:15.714 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.714 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:45:15.718 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.720 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.723 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.729 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:45:15.749 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.750 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:45:15.754 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 38.5831ms
2025-08-03 23:45:15.755 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:15.756 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 61.2528ms
2025-08-03 23:45:15.766 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:15.784 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:15.785 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 72.8033ms
2025-08-03 23:45:15.791 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:15.792 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.794 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.795 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.796 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.805 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:45:15.805 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:45:15.806 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.806 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.806 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.1065ms
2025-08-03 23:45:15.806 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.757ms
2025-08-03 23:45:15.807 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.812 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:15.812 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:15.813 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.813 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:15.814 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.814 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:15.814 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.815 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.815 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.815 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 24.7954ms
2025-08-03 23:45:15.817 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.821 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:15.822 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.822 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.822 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.824 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.824 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.827 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.827 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.828 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.828 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:45:15.829 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:15.829 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:15.830 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 17.55ms
2025-08-03 23:45:15.836 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.837 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:15.838 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:15.838 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 17.7575ms
2025-08-03 23:45:15.841 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:15.842 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.844 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.845 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.845 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:45:15.845 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.854 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.856 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:15.856 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:15.857 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:15.857 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:15.857 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 16.6349ms
2025-08-03 23:45:15.858 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:15.860 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.860 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:15 PM'.
2025-08-03 23:45:15.864 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:15.865 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:45:15.869 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:15.870 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 14.1475ms
2025-08-03 23:45:15.912 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:45:15.935 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:45:15.969 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:15.992 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.006 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.011 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.013 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.015 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.017 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.021 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.023 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.024 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.026 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.027 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.030 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.032 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.034 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.037 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.039 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.041 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.042 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.044 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.047 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.048 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.051 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.054 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.056 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.058 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.059 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.061 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:45:16.068 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 222.3562ms
2025-08-03 23:45:16.068 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:16.069 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 256.8433ms
2025-08-03 23:45:16.071 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:16.072 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:16.073 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:16 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:16.074 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:16 PM'.
2025-08-03 23:45:16.074 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:16 PM'.
2025-08-03 23:45:16.076 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:16.077 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:16.077 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:45:16.082 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:45:16.086 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:45:16.091 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.092 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.095 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.097 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.100 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.103 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.106 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.109 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.112 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.114 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.116 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.119 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.122 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.124 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.125 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.127 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.129 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.130 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.132 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.135 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.138 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.140 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.143 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.147 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.148 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:16.152 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.154 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:16.155 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:45:16.155 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 77.857ms
2025-08-03 23:45:16.155 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:16.156 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 85.2003ms
2025-08-03 23:45:17.190 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:45:17.190 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.192 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.195 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.195 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.206 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.207 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:17.207 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:45:17.221 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:45:17.244 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:45:17.246 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 38.2848ms
2025-08-03 23:45:17.246 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:17.247 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 57.0603ms
2025-08-03 23:45:17.247 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:45:17.251 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.255 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:17.256 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.256 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.257 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.259 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.261 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.261 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.262 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.262 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:17.263 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:45:17.264 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.264 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:17.265 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:17.266 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 11.3525ms
2025-08-03 23:45:17.285 +08:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:45:17.304 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:17.304 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.305 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.306 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.307 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.308 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:45:17.310 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 47.2433ms
2025-08-03 23:45:17.311 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:17.311 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 63.8084ms
2025-08-03 23:45:17.312 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.312 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:17.313 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:17.313 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 9.9745ms
2025-08-03 23:45:17.386 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:17.388 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.389 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.394 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.395 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:17.395 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:17.396 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 9.3757ms
2025-08-03 23:45:17.422 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:17.422 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:17.422 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:17.423 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.423 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.423 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:17.424 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.424 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.424 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:17.425 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.426 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.426 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.426 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.427 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.427 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:17 PM'.
2025-08-03 23:45:17.430 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.430 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.430 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:17.431 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:17.431 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:45:17.431 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:17.431 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 9.3822ms
2025-08-03 23:45:17.437 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:45:17.442 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:45:17.444 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.446 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.448 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.460 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.464 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.464 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:17.466 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:45:17.467 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:17.471 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 49.5813ms
2025-08-03 23:45:17.473 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.474 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.478 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.480 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.481 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.483 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.486 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.487 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.490 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.492 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.494 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.497 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.500 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.501 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.503 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.505 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.506 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.507 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.509 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.510 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:17.511 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.513 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:17.513 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:45:17.513 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 82.3742ms
2025-08-03 23:45:17.514 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:17.514 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 92.0302ms
2025-08-03 23:45:47.213 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:45:47.213 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.214 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 1.1244ms
2025-08-03 23:45:47.215 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:45:47.215 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.216 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:47.217 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.217 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.219 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:47.220 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:47.220 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:45:47.232 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:45:47.246 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:45:47.247 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 26.0504ms
2025-08-03 23:45:47.247 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:45:47.247 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 32.1433ms
2025-08-03 23:45:47.250 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:45:47.251 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.251 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 1.0218ms
2025-08-03 23:45:47.253 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:47.253 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.254 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:47.255 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.255 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.258 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:47.258 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:47.259 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:47.259 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 5.8172ms
2025-08-03 23:45:47.272 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:45:47.273 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:45:47.273 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:45:47.273 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.273 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.273 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.273 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5378ms
2025-08-03 23:45:47.273 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.7182ms
2025-08-03 23:45:47.274 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:47.275 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.275 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.275 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:47.275 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:45:47.275 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.275 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:45:47.276 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:47.276 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:45:47.276 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.276 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.276 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.277 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:47.277 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:45:47 PM'.
2025-08-03 23:45:47.277 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:45:47.277 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:47.277 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.7852ms
2025-08-03 23:45:47.279 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:47.279 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:45:47.280 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:45:47.280 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:47.280 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:45:47.280 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:45:47.280 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 5.3694ms
2025-08-03 23:45:47.282 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:45:47.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:45:47.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.289 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.291 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.292 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.294 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.295 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.296 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.297 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.299 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.300 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.301 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.303 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.304 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.306 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.307 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.308 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.309 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.311 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.312 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.313 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.314 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.315 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.317 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.318 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.320 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:45:47.321 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.323 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:45:47.323 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:45:47.323 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 43.1227ms
2025-08-03 23:45:47.323 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:45:47.324 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 48.922ms
2025-08-03 23:46:17.214 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:46:17.214 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.214 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.8622ms
2025-08-03 23:46:17.215 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:46:17.216 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.216 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:17.217 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.217 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.220 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:17.220 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:46:17.220 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:46:17.225 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:46:17.229 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:46:17.229 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 8.8446ms
2025-08-03 23:46:17.230 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:46:17.230 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 14.3568ms
2025-08-03 23:46:17.238 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:46:17.238 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.238 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.4099ms
2025-08-03 23:46:17.239 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:46:17.239 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.239 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:17.240 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.240 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.242 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:17.242 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:46:17.242 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:46:17.242 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.472ms
2025-08-03 23:46:17.258 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:46:17.259 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:46:17.259 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:46:17.259 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.259 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.259 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.259 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5715ms
2025-08-03 23:46:17.259 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.8313ms
2025-08-03 23:46:17.259 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:17.260 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.260 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:46:17.260 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:46:17.260 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.261 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.261 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:17.261 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:17.261 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:17.262 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.262 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.262 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.262 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:17 PM'.
2025-08-03 23:46:17.262 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:17.263 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:46:17.263 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:46:17.263 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.6307ms
2025-08-03 23:46:17.264 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:17.264 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:17.264 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:46:17.264 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:46:17.265 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:46:17.265 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:46:17.265 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.8303ms
2025-08-03 23:46:17.267 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:46:17.269 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:46:17.270 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.272 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.273 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.273 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.275 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.276 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.277 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.278 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.278 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.279 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.281 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.282 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.283 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.284 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.287 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.287 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.290 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.291 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.292 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.292 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:17.293 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.294 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:17.294 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:46:17.294 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 29.2963ms
2025-08-03 23:46:17.294 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:46:17.295 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 34.0866ms
2025-08-03 23:46:47.213 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:46:47.213 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.214 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.7661ms
2025-08-03 23:46:47.215 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:46:47.215 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.216 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:47.216 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.216 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.218 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:47.218 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:46:47.218 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:46:47.223 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:46:47.227 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:46:47.228 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 8.9227ms
2025-08-03 23:46:47.228 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:46:47.228 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 13.3744ms
2025-08-03 23:46:47.249 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:46:47.249 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.249 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.398ms
2025-08-03 23:46:47.250 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:46:47.251 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.251 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:47.252 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.252 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.253 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:47.254 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:46:47.254 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:46:47.254 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.9327ms
2025-08-03 23:46:47.276 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:46:47.277 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.277 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:47.278 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.278 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.278 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:46:47.278 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:46:47.279 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.279 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.279 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4604ms
2025-08-03 23:46:47.279 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.3799ms
2025-08-03 23:46:47.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:47.280 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:46:47.280 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:46:47.280 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:46:47.280 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:46:47.280 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.7697ms
2025-08-03 23:46:47.280 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.281 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:46:47.282 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:47.282 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:46:47.283 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.283 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.283 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.283 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:46:47 PM'.
2025-08-03 23:46:47.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:47.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:46:47.285 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:46:47.285 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:46:47.285 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:46:47.285 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:46:47.286 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 5.4004ms
2025-08-03 23:46:47.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:46:47.289 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:46:47.290 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.291 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.293 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.293 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.294 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.295 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.296 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.297 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.298 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.298 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.300 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.301 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.302 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.303 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.305 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.306 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.306 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.308 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.308 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.309 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.310 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.311 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.312 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.313 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.314 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:46:47.315 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.317 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:46:47.317 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:46:47.317 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 31.8093ms
2025-08-03 23:46:47.318 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:46:47.318 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 37.6796ms
2025-08-03 23:47:17.213 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:47:17.213 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.213 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.3915ms
2025-08-03 23:47:17.214 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:47:17.215 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.215 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:17.216 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.216 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.217 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:17.218 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:47:17.218 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:47:17.223 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:47:17.226 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:47:17.226 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 8.2445ms
2025-08-03 23:47:17.227 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:47:17.227 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 12.5323ms
2025-08-03 23:47:17.232 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:47:17.232 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.232 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.4167ms
2025-08-03 23:47:17.233 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:47:17.234 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.234 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:17.234 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.235 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.236 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:17.236 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:47:17.237 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:47:17.237 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.6041ms
2025-08-03 23:47:17.252 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:47:17.252 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.252 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:47:17.252 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:47:17.252 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:17.252 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.253 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.253 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.253 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.253 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.0643ms
2025-08-03 23:47:17.253 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.169ms
2025-08-03 23:47:17.255 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:47:17.255 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:47:17.255 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.255 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:17.255 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:17.255 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:47:17.255 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:17.255 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:17.255 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:47:17.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.256 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.7911ms
2025-08-03 23:47:17.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:17 PM'.
2025-08-03 23:47:17.259 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:17.259 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:47:17.259 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:17.259 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:47:17.259 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:47:17.259 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:47:17.260 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 5.0662ms
2025-08-03 23:47:17.261 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:47:17.262 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:47:17.264 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.265 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.266 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.268 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.269 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.270 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.271 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.272 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.273 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.275 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.277 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.277 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.279 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.280 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.281 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.282 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.283 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.284 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.286 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.287 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.288 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:17.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.290 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:17.290 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:47:17.290 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 31.0083ms
2025-08-03 23:47:17.291 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:47:17.291 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 36.1836ms
2025-08-03 23:47:47.215 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:47:47.216 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.216 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 1.3087ms
2025-08-03 23:47:47.217 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:47:47.217 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.218 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:47.218 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.219 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.220 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:47.220 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:47:47.220 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:47:47.224 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:47:47.227 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:47:47.227 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 7.005ms
2025-08-03 23:47:47.228 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:47:47.228 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 10.7807ms
2025-08-03 23:47:47.234 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:47:47.234 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.234 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.4775ms
2025-08-03 23:47:47.235 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:47:47.235 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.236 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:47.236 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.236 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.238 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:47.238 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:47:47.238 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:47:47.238 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.001ms
2025-08-03 23:47:47.252 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:47:47.253 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:47:47.253 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.253 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.253 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:47:47.253 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.348ms
2025-08-03 23:47:47.253 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.253 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:47.253 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.69ms
2025-08-03 23:47:47.254 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.254 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:47:47.254 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.254 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.254 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:47:47.255 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:47:47.255 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:47.255 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:47:47.255 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.256 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:47.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:47:47 PM'.
2025-08-03 23:47:47.256 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:47:47.256 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:47:47.256 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.8709ms
2025-08-03 23:47:47.257 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:47.257 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:47:47.258 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:47:47.258 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:47:47.259 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:47:47.259 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:47:47.260 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 5.7124ms
2025-08-03 23:47:47.261 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:47:47.263 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:47:47.264 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.266 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.267 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.268 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.269 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.270 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.271 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.272 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.274 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.276 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.277 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.278 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.279 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.281 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.282 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.283 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.286 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.287 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.288 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:47:47.290 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.291 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:47:47.291 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:47:47.291 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 31.6588ms
2025-08-03 23:47:47.291 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:47:47.292 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 37.0409ms
2025-08-03 23:48:17.216 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:48:17.216 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.216 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.5614ms
2025-08-03 23:48:17.218 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:48:17.218 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.218 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:17.219 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.219 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.220 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:17.221 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:48:17.221 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:48:17.225 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:48:17.247 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:48:17.247 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 26.1088ms
2025-08-03 23:48:17.247 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:48:17.247 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 29.7369ms
2025-08-03 23:48:17.251 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:48:17.251 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.252 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.9642ms
2025-08-03 23:48:17.253 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:48:17.253 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.254 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:17.254 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.254 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.256 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:17.256 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:48:17.256 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:48:17.256 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.0333ms
2025-08-03 23:48:17.270 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:48:17.270 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:48:17.270 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.271 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:48:17.271 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.271 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.271 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4565ms
2025-08-03 23:48:17.271 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:17.271 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.3499ms
2025-08-03 23:48:17.272 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:48:17.272 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.272 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.272 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:48:17.272 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.272 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:17.272 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:17.273 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:17.273 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.273 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.273 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.273 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:17 PM'.
2025-08-03 23:48:17.273 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:17.274 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:48:17.274 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:48:17.274 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.6091ms
2025-08-03 23:48:17.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:17.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:17.274 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:48:17.275 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:48:17.275 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:48:17.275 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:48:17.275 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.43ms
2025-08-03 23:48:17.276 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:48:17.278 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:48:17.279 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.280 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.281 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.282 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.283 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.283 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.286 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.287 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.287 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.288 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.290 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.291 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.291 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.292 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.293 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.294 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.295 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.296 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.296 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.297 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.298 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.299 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:17.299 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.300 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:17.300 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:48:17.300 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 25.5528ms
2025-08-03 23:48:17.301 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:48:17.301 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 28.7207ms
2025-08-03 23:48:47.215 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:48:47.231 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.232 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 16.8898ms
2025-08-03 23:48:47.233 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:48:47.233 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.234 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:47.235 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.235 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.236 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:47.236 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:48:47.237 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:48:47.241 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:48:47.244 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:48:47.244 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 6.9682ms
2025-08-03 23:48:47.245 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:48:47.245 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 12.7367ms
2025-08-03 23:48:47.255 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:48:47.255 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.255 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.3313ms
2025-08-03 23:48:47.256 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:48:47.256 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.257 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:47.257 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.257 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.258 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:47.259 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:48:47.259 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:48:47.259 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.5068ms
2025-08-03 23:48:47.275 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:48:47.275 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:48:47.275 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:48:47.275 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.275 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.275 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.276 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5431ms
2025-08-03 23:48:47.276 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4641ms
2025-08-03 23:48:47.276 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:47.277 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.277 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.277 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:48:47.277 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:48:47.277 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.277 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:48:47.278 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:47.278 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:48:47.278 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:47.278 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.278 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.278 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:48:47.278 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.279 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:48:47 PM'.
2025-08-03 23:48:47.279 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:48:47.279 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.1632ms
2025-08-03 23:48:47.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:47.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:48:47.280 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:48:47.281 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:48:47.281 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:48:47.281 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:48:47.282 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.6985ms
2025-08-03 23:48:47.283 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:48:47.285 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:48:47.286 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.287 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.289 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.289 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.290 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.291 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.292 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.294 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.294 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.296 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.297 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.298 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.301 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.302 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.302 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.303 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.304 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.305 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.305 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.306 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.307 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.308 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.309 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.309 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:48:47.310 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.311 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:48:47.311 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:48:47.312 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 30.0734ms
2025-08-03 23:48:47.312 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:48:47.312 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 34.8978ms
2025-08-03 23:49:17.216 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:49:17.217 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.217 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 1.3009ms
2025-08-03 23:49:17.218 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:49:17.219 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.219 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:17.220 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.220 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.221 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:17.222 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:49:17.222 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:49:17.225 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:49:17.227 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:49:17.228 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 5.7665ms
2025-08-03 23:49:17.228 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:49:17.228 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 9.4888ms
2025-08-03 23:49:17.235 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:49:17.235 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.236 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.3414ms
2025-08-03 23:49:17.236 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:17.237 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.237 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:17.237 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.237 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.238 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:17.239 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:17.239 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:17.239 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.5373ms
2025-08-03 23:49:17.254 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:17.254 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:49:17.254 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:49:17.254 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.254 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.254 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.255 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6022ms
2025-08-03 23:49:17.255 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6596ms
2025-08-03 23:49:17.255 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:17.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.256 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:49:17.256 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:49:17.256 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.257 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:17.257 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:17.257 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:17.257 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.257 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:17.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.258 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:17 PM'.
2025-08-03 23:49:17.258 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:17.258 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:17.258 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.231ms
2025-08-03 23:49:17.259 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:17.259 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:17.259 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:49:17.259 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:49:17.260 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:49:17.260 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:17.261 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.7601ms
2025-08-03 23:49:17.262 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:49:17.263 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:49:17.264 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.265 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.266 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.267 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.269 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.270 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.271 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.272 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.273 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.274 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.274 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.275 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.276 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.277 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.278 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.279 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.280 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.281 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.281 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.282 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.283 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.284 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.285 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.285 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.286 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:17.287 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.288 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:17.288 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:49:17.288 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 28.0144ms
2025-08-03 23:49:17.288 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:49:17.288 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 32.3576ms
2025-08-03 23:49:23.869 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:49:23.869 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:49:23.869 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.869 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.869 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.594ms
2025-08-03 23:49:23.869 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.5053ms
2025-08-03 23:49:23.871 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:49:23.871 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:23.872 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.872 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.872 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:23.873 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:23.873 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.874 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.874 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.874 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.876 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:23.876 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:23.877 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:49:23.877 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:49:23.877 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:23.877 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:23.878 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 6.3505ms
2025-08-03 23:49:23.888 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:49:23.891 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:49:23.891 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 14.059ms
2025-08-03 23:49:23.891 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:49:23.891 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 20.2315ms
2025-08-03 23:49:23.920 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:23.921 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.921 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:23.922 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.922 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.924 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:23.925 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:23.925 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:23.925 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.7357ms
2025-08-03 23:49:23.945 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:23.945 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.946 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:23.947 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.947 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.948 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:49:23.948 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:49:23.948 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.949 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.949 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6767ms
2025-08-03 23:49:23.949 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6196ms
2025-08-03 23:49:23.949 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:23.950 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:23.952 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:23.952 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:49:23.952 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 7.4304ms
2025-08-03 23:49:23.952 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:49:23.953 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.954 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:23.955 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:23.955 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:23.956 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.957 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.957 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.957 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:23 PM'.
2025-08-03 23:49:23.959 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:23.959 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:23.959 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:49:23.959 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:49:23.959 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:49:23.959 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:23.960 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 7.9325ms
2025-08-03 23:49:23.962 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:49:23.963 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:49:23.964 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.965 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.967 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.969 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.970 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.973 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.975 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.976 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.977 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.978 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.979 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.979 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.980 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.981 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.983 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.984 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.986 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.987 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.989 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.990 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.991 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.992 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.993 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.994 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.995 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:23.996 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.997 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:23.997 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:49:23.997 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 38.0537ms
2025-08-03 23:49:23.998 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:49:23.998 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 45.2851ms
2025-08-03 23:49:34.348 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:49:34.349 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.349 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:49:34.349 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 1.0233ms
2025-08-03 23:49:34.349 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.350 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.9763ms
2025-08-03 23:49:34.351 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:34.351 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.352 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:49:34.352 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:34.352 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.353 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.353 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.353 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:34.354 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.354 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.355 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:34.355 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:34.356 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:34.356 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:49:34.356 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:34.356 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:49:34.356 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 5.3367ms
2025-08-03 23:49:34.361 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:49:34.363 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:49:34.364 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 7.4379ms
2025-08-03 23:49:34.364 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:49:34.364 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 12.6935ms
2025-08-03 23:49:34.391 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:34.391 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.391 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:34.392 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.392 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.393 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:34.393 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:34.393 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:34.394 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.7064ms
2025-08-03 23:49:34.415 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:49:34.415 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:49:34.415 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:49:34.415 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.416 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.416 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.7343ms
2025-08-03 23:49:34.416 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.416 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.1661ms
2025-08-03 23:49:34.416 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:34.417 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:49:34.418 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:49:34.418 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.418 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.418 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.418 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:49:34.420 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:34.420 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:49:34.420 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.421 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.421 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:34.421 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.421 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:49:34 PM'.
2025-08-03 23:49:34.422 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:49:34.422 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:34.422 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 6.9107ms
2025-08-03 23:49:34.423 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:34.423 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:49:34.423 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:49:34.423 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:49:34.423 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:49:34.423 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:49:34.423 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 6.2162ms
2025-08-03 23:49:34.425 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:49:34.426 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:49:34.427 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.428 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.429 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.430 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.431 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.432 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.433 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.435 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.436 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.437 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.439 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.441 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.442 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.443 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.444 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.444 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.445 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.446 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.447 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.448 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.449 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.450 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.450 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.452 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.453 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:49:34.453 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.454 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:49:34.454 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:49:34.455 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 30.9086ms
2025-08-03 23:49:34.456 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:49:34.456 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 38.3505ms
2025-08-03 23:50:04.349 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:50:04.350 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.350 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.5864ms
2025-08-03 23:50:04.351 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:50:04.352 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.352 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:04.352 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.352 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.354 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:04.354 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:04.354 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:50:04.358 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:50:04.360 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:50:04.360 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 6.1042ms
2025-08-03 23:50:04.361 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:04.361 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 9.6258ms
2025-08-03 23:50:04.367 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:50:04.368 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.368 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.3424ms
2025-08-03 23:50:04.369 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:04.369 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.369 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:04.370 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.370 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.371 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:04.371 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:04.371 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:04.371 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.5868ms
2025-08-03 23:50:04.387 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:04.387 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:50:04.387 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.387 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.387 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:50:04.387 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.3433ms
2025-08-03 23:50:04.387 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.387 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:04.388 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.6369ms
2025-08-03 23:50:04.388 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:04.388 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.388 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:04.389 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.389 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:04.389 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.389 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:04.389 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:04.389 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:04 PM'.
2025-08-03 23:50:04.390 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:04.391 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:04.391 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:04.391 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.1661ms
2025-08-03 23:50:04.391 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:04.391 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:04.391 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:50:04.392 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:04.392 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:04.392 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 4.3536ms
2025-08-03 23:50:04.393 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:50:04.395 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:50:04.396 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:50:04.397 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.398 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.400 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.401 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.402 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.403 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.404 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.405 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.406 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.406 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.407 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.408 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.409 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.411 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.412 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.413 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.413 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.414 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.415 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.416 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.417 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.418 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.419 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.420 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.420 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:04.421 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.422 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:04.422 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:50:04.422 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 28.9487ms
2025-08-03 23:50:04.423 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:04.423 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 34.3234ms
2025-08-03 23:50:34.348 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:50:34.349 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.349 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.3812ms
2025-08-03 23:50:34.350 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:50:34.350 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.350 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:34.351 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.351 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.366 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:34.366 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:34.367 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:50:34.379 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:50:34.381 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:50:34.382 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 15.0893ms
2025-08-03 23:50:34.382 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:34.382 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 32.3422ms
2025-08-03 23:50:34.385 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:50:34.385 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.386 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.7576ms
2025-08-03 23:50:34.387 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:34.387 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.387 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:34.388 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.388 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.389 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:34.389 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:34.389 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:34.389 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.5165ms
2025-08-03 23:50:34.404 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:50:34.404 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:34.404 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.404 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:50:34.404 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.404 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.404 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4906ms
2025-08-03 23:50:34.404 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5086ms
2025-08-03 23:50:34.405 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:34.405 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:34.405 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.405 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.406 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.406 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:34.406 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:34.406 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:34.406 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:34.406 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.407 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.407 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.407 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:34 PM'.
2025-08-03 23:50:34.407 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:34.407 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:34.407 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:34.407 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.6004ms
2025-08-03 23:50:34.408 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:34.409 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:34.409 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:50:34.411 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:50:34.412 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:50:34.414 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.417 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.418 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.419 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.420 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.421 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.422 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.423 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.423 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:34.423 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:50:34.423 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:34.423 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 18.077ms
2025-08-03 23:50:34.424 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.426 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.427 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.429 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.430 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.431 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.432 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.432 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.433 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.435 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.435 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.437 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.437 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.438 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.439 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.439 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.440 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:34.441 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.442 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:34.442 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:50:34.442 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 33.1697ms
2025-08-03 23:50:34.442 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:34.442 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 36.8237ms
2025-08-03 23:50:50.749 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:50:50.753 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.754 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 4.5826ms
2025-08-03 23:50:50.756 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:50:50.758 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.758 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:50.762 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.763 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.785 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:50.785 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:50.786 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:50:50.794 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:50:50.799 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:50:50.799 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 12.4853ms
2025-08-03 23:50:50.799 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:50.800 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 43.7138ms
2025-08-03 23:50:50.804 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:50:50.805 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.805 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.5639ms
2025-08-03 23:50:50.806 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:50.807 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.807 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:50.808 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.808 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.810 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:50.810 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:50.810 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:50.810 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.134ms
2025-08-03 23:50:50.826 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:50.826 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.826 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:50.826 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:50:50.827 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.827 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.826 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:50:50.827 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.827 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.827 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5043ms
2025-08-03 23:50:50.827 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.8811ms
2025-08-03 23:50:50.829 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:50.829 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:50.829 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:50.829 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:50.829 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.829 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:50.829 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:50.829 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.8635ms
2025-08-03 23:50:50.830 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:50.830 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:50.830 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.831 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.831 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.831 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:50 PM'.
2025-08-03 23:50:50.833 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:50.833 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:50.833 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:50.834 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:50:50.834 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:50:50.834 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:50.834 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 5.4927ms
2025-08-03 23:50:50.837 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:50:50.840 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:50:50.841 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.842 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.843 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.844 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.845 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.846 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.847 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.847 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.848 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.849 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.850 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.851 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.851 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.852 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.853 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.854 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.854 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.855 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.856 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.857 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.858 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.859 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.860 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.861 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.861 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:50.862 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.863 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:50.863 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:50:50.863 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 29.164ms
2025-08-03 23:50:50.863 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:50.863 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 34.6626ms
2025-08-03 23:50:54.053 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:50:54.054 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.058 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.061 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.061 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.075 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.075 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:54.076 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:50:54.086 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:50:54.090 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:50:54.091 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 14.8153ms
2025-08-03 23:50:54.091 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:54.091 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 38.4727ms
2025-08-03 23:50:54.093 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:50:54.093 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.094 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.095 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.095 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.098 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.098 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:54.098 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:50:54.105 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:50:54.109 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:50:54.110 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 11.1884ms
2025-08-03 23:50:54.110 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:50:54.110 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 17.6546ms
2025-08-03 23:50:54.114 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:54.114 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.115 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.116 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.116 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.120 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.120 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:54.120 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:54.121 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 7.139ms
2025-08-03 23:50:54.163 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:54.164 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.164 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.165 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.165 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.171 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.172 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:54.172 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:54.172 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 8.9772ms
2025-08-03 23:50:54.209 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:54.209 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.210 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.210 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.210 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.212 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.213 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:54.213 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:54.213 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 4.5433ms
2025-08-03 23:50:54.245 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:50:54.245 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.246 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.246 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.246 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.247 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.247 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:50:54.248 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:54.248 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.7039ms
2025-08-03 23:50:54.272 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:54.272 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:50:54.273 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.273 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:50:54.273 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.273 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:50:54.274 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.274 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.274 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.274 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:50:54 PM'.
2025-08-03 23:50:54.275 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.275 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:50:54.275 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:54.276 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:50:54.276 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:50:54.276 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:50:54.276 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.8942ms
2025-08-03 23:50:54.278 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:50:54.280 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:50:54.282 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.284 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.287 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.288 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.290 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.293 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.294 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.296 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.297 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.298 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.299 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.301 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.303 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.304 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.305 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.306 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.307 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.308 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.308 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.310 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.312 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.314 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.315 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.317 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.320 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:50:54.321 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.322 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:50:54.323 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:50:54.323 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 47.1164ms
2025-08-03 23:50:54.323 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:50:54.323 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 50.8155ms
2025-08-03 23:51:24.088 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:51:24.088 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.088 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 0.48ms
2025-08-03 23:51:24.089 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:51:24.089 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.090 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:24.090 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.090 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.092 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:24.092 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:51:24.092 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:51:24.101 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:51:24.104 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:51:24.104 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 11.6712ms
2025-08-03 23:51:24.104 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:51:24.104 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 15.3226ms
2025-08-03 23:51:24.111 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:51:24.111 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.111 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 0.4322ms
2025-08-03 23:51:24.112 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:51:24.113 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.113 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:24.113 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.113 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.114 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:24.115 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:51:24.115 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:51:24.115 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 2.5402ms
2025-08-03 23:51:24.132 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:51:24.132 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:51:24.132 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.133 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.132 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:51:24.133 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.4722ms
2025-08-03 23:51:24.133 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:24.133 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.133 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.133 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:51:24.133 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 204 null null 1.0492ms
2025-08-03 23:51:24.133 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.134 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.134 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:51:24.134 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:24.134 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:24.135 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.135 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.135 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:24.135 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.136 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:24.136 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:24 PM'.
2025-08-03 23:51:24.136 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:51:24.136 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:51:24.136 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:24.136 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 3.934ms
2025-08-03 23:51:24.136 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:51:24.137 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:51:24.137 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/instructor/bee889a2-efca-471d-807c-a7674a945612 - 401 0 null 3.3832ms
2025-08-03 23:51:24.137 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:24.138 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:51:24.138 +08:00 [INF] Route matched with {action = "GetInstructorRevenue", controller = "Revenue"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetInstructorRevenue(System.String) on controller CeceLearningPortal.Api.Controllers.RevenueController (CeceLearningPortal.Api).
2025-08-03 23:51:24.141 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2025-08-03 23:51:24.142 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__instructorId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
FROM courses AS c
WHERE c.instructor_id = @__instructorId_0
2025-08-03 23:51:24.142 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.143 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.144 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.145 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.146 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.147 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.148 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.148 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.149 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.150 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.151 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.152 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.153 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.153 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.154 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.155 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.156 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.156 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.157 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.158 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.158 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.159 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.160 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.161 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.161 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0
2025-08-03 23:51:24.162 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND NOT EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.163 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@__courseId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM enrollments AS e
WHERE e.course_id = @__courseId_0 AND EXISTS (
    SELECT 1
    FROM subscriptions AS s
    WHERE s.user_id = e.student_id AND s.status = 'Active' AND s.start_date <= e.enrolled_at)
2025-08-03 23:51:24.163 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.InstructorRevenueDto'.
2025-08-03 23:51:24.163 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api) in 23.7901ms
2025-08-03 23:51:24.163 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.RevenueController.GetInstructorRevenue (CeceLearningPortal.Api)'
2025-08-03 23:51:24.163 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/revenue/instructor/bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 29.1051ms
2025-08-03 23:51:49.445 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - null null
2025-08-03 23:51:49.445 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:49.446 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - 204 null null 0.9708ms
2025-08-03 23:51:49.447 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/34 - application/json null
2025-08-03 23:51:49.449 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:49.449 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:49 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:49.450 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:49 PM'.
2025-08-03 23:51:49.450 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:49 PM'.
2025-08-03 23:51:49.453 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:49.453 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 23:51:49.461 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:51:49.504 +08:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-08-03 23:51:49.596 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 23:51:49.623 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 23:51:49.642 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 181.3442ms
2025-08-03 23:51:49.643 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 23:51:49.643 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/34 - 200 null application/json; charset=utf-8 195.8244ms
2025-08-03 23:51:49.647 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - null null
2025-08-03 23:51:49.648 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:49.648 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/enrollments - 204 null null 0.4401ms
2025-08-03 23:51:49.649 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/enrollments - application/json null
2025-08-03 23:51:49.650 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:49.650 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:49 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:49.650 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:49 PM'.
2025-08-03 23:51:49.650 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:49 PM'.
2025-08-03 23:51:49.652 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:49.653 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-08-03 23:51:49.653 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:51:49.653 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/enrollments - 401 0 null 3.7011ms
2025-08-03 23:51:54.896 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - null null
2025-08-03 23:51:54.896 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:54.897 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses/34 - 204 null null 0.3519ms
2025-08-03 23:51:54.898 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses/34 - application/json null
2025-08-03 23:51:54.898 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:51:54.898 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:54 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:51:54.899 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:54 PM'.
2025-08-03 23:51:54.899 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:51:54 PM'.
2025-08-03 23:51:54.900 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:51:54.900 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 23:51:54.901 +08:00 [INF] Route matched with {action = "GetCourse", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(Int32) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:51:54.906 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s.id, s."AccessDuration", s."AccessType", s."AutomationAbandonmentSequence", s."AutomationCompletionCertificate", s."AutomationProgressReminders", s."AutomationWelcomeEmail", s.category, s."CourseType", s.created_at, s."Currency", s.description, s.discount, s."DripContent", s."DripScheduleJson", s.duration, s."EnrollmentLimit", s.enrollment_type, s.features, s."HasAssignments", s."HasCertificate", s."HasCommunity", s."HasDownloadableResources", s."HasLiveSessions", s."HasQuizzes", s.instructor_id, s.is_bestseller, s."IsPublished", s."Language", s.level, s.original_price, s."PaymentPlanDetailsJson", s.preview_url, s.price, s."PricingModel", s."PromoVideoUrl", s."PublishedAt", s."ShortDescription", s.status, s."SubscriptionPeriod", s.thumbnail, s.thumbnail_url, s.title, s.updated_at, s."Id0", s."AccessFailedCount", s."Avatar", s."ConcurrencyStamp", s."CreatedAt", s."Email", s."EmailConfirmed", s."FullName", s."LastLoginAt", s."LockoutEnabled", s."LockoutEnd", s."NormalizedEmail", s."NormalizedUserName", s."NotificationPreferences", s."PasswordHash", s."PhoneNumber", s."PhoneNumberConfirmed", s."RefreshToken", s."RefreshTokenExpiryTime", s."Role", s."SecurityStamp", s."Status0", s."TwoFactorEnabled", s."UserName", s0.id, s0.course_id, s0.created_at, s0.description, s0."order", s0.title, s0.updated_at, s0.id0, s0.content, s0.created_at0, s0.duration, s0.module_id, s0.order0, s0.title0, s0.type, s0.updated_at0, s0.video_url, s1.id, s1.approved_at, s1.approved_by, s1.comment, s1.course_id, s1.created_at, s1.is_flagged, s1.rating, s1.status, s1.student_id, s1."Id0", s1."AccessFailedCount", s1."Avatar", s1."ConcurrencyStamp", s1."CreatedAt", s1."Email", s1."EmailConfirmed", s1."FullName", s1."LastLoginAt", s1."LockoutEnabled", s1."LockoutEnd", s1."NormalizedEmail", s1."NormalizedUserName", s1."NotificationPreferences", s1."PasswordHash", s1."PhoneNumber", s1."PhoneNumberConfirmed", s1."RefreshToken", s1."RefreshTokenExpiryTime", s1."Role", s1."SecurityStamp", s1."Status0", s1."TwoFactorEnabled", s1."UserName", e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at, a."Id" AS "Id0", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status" AS "Status0", a."TwoFactorEnabled", a."UserName"
    FROM courses AS c
    INNER JOIN "AspNetUsers" AS a ON c.instructor_id = a."Id"
    WHERE c.id = @__id_0
    LIMIT 1
) AS s
LEFT JOIN (
    SELECT c0.id, c0.course_id, c0.created_at, c0.description, c0."order", c0.title, c0.updated_at, c1.id AS id0, c1.content, c1.created_at AS created_at0, c1.duration, c1.module_id, c1."order" AS order0, c1.title AS title0, c1.type, c1.updated_at AS updated_at0, c1.video_url
    FROM course_modules AS c0
    LEFT JOIN course_lessons AS c1 ON c0.id = c1.module_id
) AS s0 ON s.id = s0.course_id
LEFT JOIN (
    SELECT c2.id, c2.approved_at, c2.approved_by, c2.comment, c2.course_id, c2.created_at, c2.is_flagged, c2.rating, c2.status, c2.student_id, a0."Id" AS "Id0", a0."AccessFailedCount", a0."Avatar", a0."ConcurrencyStamp", a0."CreatedAt", a0."Email", a0."EmailConfirmed", a0."FullName", a0."LastLoginAt", a0."LockoutEnabled", a0."LockoutEnd", a0."NormalizedEmail", a0."NormalizedUserName", a0."NotificationPreferences", a0."PasswordHash", a0."PhoneNumber", a0."PhoneNumberConfirmed", a0."RefreshToken", a0."RefreshTokenExpiryTime", a0."Role", a0."SecurityStamp", a0."Status" AS "Status0", a0."TwoFactorEnabled", a0."UserName"
    FROM course_reviews AS c2
    INNER JOIN "AspNetUsers" AS a0 ON c2.student_id = a0."Id"
) AS s1 ON s.id = s1.course_id
LEFT JOIN enrollments AS e ON s.id = e.course_id
ORDER BY s.id, s."Id0", s0.id, s0.id0, s1.id, s1."Id0"
2025-08-03 23:51:54.908 +08:00 [INF] Executing OkObjectResult, writing value of type 'CeceLearningPortal.Api.DTOs.CourseDetailDto'.
2025-08-03 23:51:54.908 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api) in 6.7134ms
2025-08-03 23:51:54.908 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourse (CeceLearningPortal.Api)'
2025-08-03 23:51:54.908 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses/34 - 200 null application/json; charset=utf-8 10.6625ms
2025-08-03 23:52:04.686 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - null null
2025-08-03 23:52:04.687 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.687 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/analytics/platform - 204 null null 1.1187ms
2025-08-03 23:52:04.688 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses - null null
2025-08-03 23:52:04.694 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.695 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses - 204 null null 7.2036ms
2025-08-03 23:52:04.695 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/analytics/platform - application/json null
2025-08-03 23:52:04.696 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.696 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:52:04.697 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.698 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.699 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses - application/json null
2025-08-03 23:52:04.699 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.701 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:52:04.702 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.702 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.760 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:52:04.760 +08:00 [INF] Executed DbCommand (57ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:52:04.760 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-08-03 23:52:04.761 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:52:04.761 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-08-03 23:52:04.761 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:52:04.761 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/analytics/platform - 401 0 null 65.464ms
2025-08-03 23:52:04.772 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:52:04.776 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:52:04.777 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 15.5918ms
2025-08-03 23:52:04.777 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:52:04.777 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses - 200 null application/json; charset=utf-8 78.2148ms
2025-08-03 23:52:04.784 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - null null
2025-08-03 23:52:04.786 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.786 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - 204 null null 2.0735ms
2025-08-03 23:52:04.792 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - application/json null
2025-08-03 23:52:04.794 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.795 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:52:04.795 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.795 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.798 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:52:04.798 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats - 404 0 null 5.996ms
2025-08-03 23:52:04.801 +08:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5294/api/users/bee889a2-efca-471d-807c-a7674a945612/instructor-stats, Response status code: 404
2025-08-03 23:52:04.837 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - null null
2025-08-03 23:52:04.837 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.837 +08:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - 204 null null 0.5216ms
2025-08-03 23:52:04.841 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - application/json null
2025-08-03 23:52:04.842 +08:00 [INF] CORS policy execution successful.
2025-08-03 23:52:04.847 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-08-03 23:52:04.848 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.848 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '8/3/2025 4:23:28 AM', Current time (UTC): '8/3/2025 3:52:04 PM'.
2025-08-03 23:52:04.850 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM refresh_tokens AS r
    WHERE r.user_id = @__userId_0 AND r.revoked_at IS NULL AND now() < r.expires_at)
2025-08-03 23:52:04.850 +08:00 [INF] Executing endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:52:04.851 +08:00 [INF] Route matched with {action = "GetCourses", controller = "Courses"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourses(CeceLearningPortal.Api.DTOs.CourseFilterDto) on controller CeceLearningPortal.Api.Controllers.CoursesController (CeceLearningPortal.Api).
2025-08-03 23:52:04.859 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c0.id, c0."AccessDuration", c0."AccessType", c0."AutomationAbandonmentSequence", c0."AutomationCompletionCertificate", c0."AutomationProgressReminders", c0."AutomationWelcomeEmail", c0.category, c0."CourseType", c0.created_at, c0."Currency", c0.description, c0.discount, c0."DripContent", c0."DripScheduleJson", c0.duration, c0."EnrollmentLimit", c0.enrollment_type, c0.features, c0."HasAssignments", c0."HasCertificate", c0."HasCommunity", c0."HasDownloadableResources", c0."HasLiveSessions", c0."HasQuizzes", c0.instructor_id, c0.is_bestseller, c0."IsPublished", c0."Language", c0.level, c0.original_price, c0."PaymentPlanDetailsJson", c0.preview_url, c0.price, c0."PricingModel", c0."PromoVideoUrl", c0."PublishedAt", c0."ShortDescription", c0.status, c0."SubscriptionPeriod", c0.thumbnail, c0.thumbnail_url, c0.title, c0.updated_at, a."Id", a."AccessFailedCount", a."Avatar", a."ConcurrencyStamp", a."CreatedAt", a."Email", a."EmailConfirmed", a."FullName", a."LastLoginAt", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."NotificationPreferences", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."RefreshToken", a."RefreshTokenExpiryTime", a."Role", a."SecurityStamp", a."Status", a."TwoFactorEnabled", a."UserName", s.id, s.course_id, s.created_at, s.description, s."order", s.title, s.updated_at, s.id0, s.content, s.created_at0, s.duration, s.module_id, s.order0, s.title0, s.type, s.updated_at0, s.video_url, c3.id, c3.approved_at, c3.approved_by, c3.comment, c3.course_id, c3.created_at, c3.is_flagged, c3.rating, c3.status, c3.student_id, e.id, e.average_quiz_score, e.certificate_issued, e.certificate_url, e.completed_at, e.completed_lessons, e.course_id, e.enrolled_at, e.last_accessed_date, e.progress_percentage, e.quiz_count, e.student_id, e.total_time_spent
FROM (
    SELECT c.id, c."AccessDuration", c."AccessType", c."AutomationAbandonmentSequence", c."AutomationCompletionCertificate", c."AutomationProgressReminders", c."AutomationWelcomeEmail", c.category, c."CourseType", c.created_at, c."Currency", c.description, c.discount, c."DripContent", c."DripScheduleJson", c.duration, c."EnrollmentLimit", c.enrollment_type, c.features, c."HasAssignments", c."HasCertificate", c."HasCommunity", c."HasDownloadableResources", c."HasLiveSessions", c."HasQuizzes", c.instructor_id, c.is_bestseller, c."IsPublished", c."Language", c.level, c.original_price, c."PaymentPlanDetailsJson", c.preview_url, c.price, c."PricingModel", c."PromoVideoUrl", c."PublishedAt", c."ShortDescription", c.status, c."SubscriptionPeriod", c.thumbnail, c.thumbnail_url, c.title, c.updated_at
    FROM courses AS c
    ORDER BY c.created_at DESC
    LIMIT @__p_1 OFFSET @__p_0
) AS c0
INNER JOIN "AspNetUsers" AS a ON c0.instructor_id = a."Id"
LEFT JOIN (
    SELECT c1.id, c1.course_id, c1.created_at, c1.description, c1."order", c1.title, c1.updated_at, c2.id AS id0, c2.content, c2.created_at AS created_at0, c2.duration, c2.module_id, c2."order" AS order0, c2.title AS title0, c2.type, c2.updated_at AS updated_at0, c2.video_url
    FROM course_modules AS c1
    LEFT JOIN course_lessons AS c2 ON c1.id = c2.module_id
) AS s ON c0.id = s.course_id
LEFT JOIN course_reviews AS c3 ON c0.id = c3.course_id
LEFT JOIN enrollments AS e ON c0.id = e.course_id
ORDER BY c0.created_at DESC, c0.id, a."Id", s.id, s.id0, c3.id
2025-08-03 23:52:04.863 +08:00 [INF] Executing OkObjectResult, writing value of type 'System.Linq.Enumerable+ListSelectIterator`2[[CeceLearningPortal.Api.Models.Course, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[CeceLearningPortal.Api.DTOs.CourseDto, CeceLearningPortal.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-08-03 23:52:04.864 +08:00 [INF] Executed action CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api) in 13.1378ms
2025-08-03 23:52:04.864 +08:00 [INF] Executed endpoint 'CeceLearningPortal.Api.Controllers.CoursesController.GetCourses (CeceLearningPortal.Api)'
2025-08-03 23:52:04.864 +08:00 [INF] Request finished HTTP/1.1 GET http://localhost:5294/api/courses?instructorId=bee889a2-efca-471d-807c-a7674a945612 - 200 null application/json; charset=utf-8 23.0728ms
